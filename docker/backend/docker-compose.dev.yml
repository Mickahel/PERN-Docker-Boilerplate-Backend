version: "3"
# docker-compose -f docker-compose.dev.yml up
# docker-compose -f docker-compose.dev.yml -d up
services:
  ###########################
  #       dev-frontend      #
  ###########################
  dev-frontend:
    #tty: true
    #stdin_open: true
    container_name: dev-react-frontend
    build:
      context: ./frontend
      dockerfile: dev.Dockerfile
    volumes:
      - "./frontend:/app/frontend"
      - "/app/frontend/node_modules"
    ports:
      - 3000:3000
    environment:
      - CHOKIDAR_USEPOLLING=true
      - REACT_APP_ENDPOINT="PINGUINI"

  ###########################
  #       dev-backend       #
  ###########################
  dev-backend:
    container_name: dev-node-backend
    environment:
      - NODE_ENV=development
    build:
      context: ./backend
      dockerfile: dev.Dockerfile
    depends_on:
      - "dev-database"
    volumes:
      - "./backend:/app/backend"
      - "/app/backend/node_modules"
    ports:
      - 4000:4000

  ##########################
  #       dev-database      #
  ##########################
  dev-database:
    container_name: dev-postgres-database
    image: postgres
    restart: always
    ports:
      - 5432:5432
    volumes:
      - ./pgdata:/var/lib/postgresql
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - PGDATA=/var/lib/postgresql/data
      - POSTGRES_DB=postgres
#  pgadmin:
#    image: dpage/pgadmin4:4.18
#    restart: always
#    environment:
#      PGADMIN_DEFAULT_EMAIL: admin@linuxhint.com
#      PGADMIN_DEFAULT_PASSWORD: secret
#      PGADMIN_LISTEN_PORT: 80
#    ports:
#      - "8080:80"
#    volumes:
#      - pgadmin-data:/var/lib/pgadmin
#    links:
#     - "database:pgsql-server"
